// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5505.ArTiJaBr.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc5505.ArTiJaBr.Robot;

/**
 *
 */
public class turnToAngle extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    double Angle;
    double Speed;
    boolean isDone;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public turnToAngle(double angle, double speed) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        Angle = angle;
        Speed = speed;
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        Robot.driveTrain.isDriverControlMode = false;
        Robot.driveTrain.zeroGyro();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        double offset = Angle - Robot.driveTrain.getAngle();
        if (offset >= 1) {
            //Turn Right
            Robot.driveTrain.turn(Speed);
            isDone = false;
        } else if (offset <= 1) {
            //Turn Left
            Robot.driveTrain.turn(-Speed);
            isDone = false;
        } else {
            //Stop
            Robot.driveTrain.stop();
            isDone = true;
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return isDone || Robot.driveTrain.isDriverControlMode;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.driveTrain.stop();
        Robot.driveTrain.isDriverControlMode = true;
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
}
